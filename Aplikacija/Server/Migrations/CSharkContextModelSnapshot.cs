// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Models;

namespace server.Migrations
{
    [DbContext(typeof(CSharkContext))]
    partial class CSharkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("server.Models.Greska", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDZadatka")
                        .HasColumnType("int")
                        .HasColumnName("IDZadatka");

                    b.Property<string>("TekstGreske")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TekstGreske");

                    b.HasKey("ID");

                    b.ToTable("Greska");
                });

            modelBuilder.Entity("server.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojBodova")
                        .HasColumnType("int")
                        .HasColumnName("BrojBodova");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("KorisnickoIme");

                    b.Property<string>("Sifra")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Sifra");

                    b.Property<string>("TipKorisnika")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TipKorisnika");

                    b.HasKey("ID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("server.Models.Resavanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Korisnik")
                        .HasColumnType("int")
                        .HasColumnName("Korisnik");

                    b.Property<int>("Zadatak")
                        .HasColumnType("int")
                        .HasColumnName("Zadatak");

                    b.HasKey("ID");

                    b.ToTable("Resavanje");
                });

            modelBuilder.Entity("server.Models.ZadatakNaCekanju", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutorZadatka")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AutorZadatka");

                    b.Property<int>("BrojBodova")
                        .HasColumnType("int")
                        .HasColumnName("BrojBodova");

                    b.Property<int>("BrojDislikes")
                        .HasColumnType("int")
                        .HasColumnName("BrojDislikes");

                    b.Property<int>("BrojLikes")
                        .HasColumnType("int")
                        .HasColumnName("BrojLikes");

                    b.Property<string>("Objasnjenje")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Objasnjenje");

                    b.Property<string>("OpcijaA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OpcijaA");

                    b.Property<string>("OpcijaB")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OpcijaB");

                    b.Property<string>("OpcijaC")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OpcijaC");

                    b.Property<string>("ProgramskiJezik")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Jezik");

                    b.Property<string>("TacanOdgovor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TacanOdgovor");

                    b.Property<string>("TekstZadatka")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TekstZadatka");

                    b.Property<int?>("TrenutniKorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("ZadatakJeOk")
                        .HasColumnType("int")
                        .HasColumnName("ZadatakJeOk");

                    b.Property<int>("ZadatakPrelak")
                        .HasColumnType("int")
                        .HasColumnName("ZadatakPrelak");

                    b.Property<int>("ZadatakPretezak")
                        .HasColumnType("int")
                        .HasColumnName("ZadatakPretezak");

                    b.HasKey("ID");

                    b.HasIndex("TrenutniKorisnikID");

                    b.ToTable("ZadatakNaCekanju");
                });

            modelBuilder.Entity("server.Models.ZadatakOdobren", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutorZadatka")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AutorZadatka");

                    b.Property<int>("BrojBodova")
                        .HasColumnType("int")
                        .HasColumnName("BrojBodova");

                    b.Property<int>("BrojDislikes")
                        .HasColumnType("int")
                        .HasColumnName("BrojDislikes");

                    b.Property<int>("BrojLikes")
                        .HasColumnType("int")
                        .HasColumnName("BrojLikes");

                    b.Property<string>("Objasnjenje")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Objasnjenje");

                    b.Property<string>("OpcijaA")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OpcijaA");

                    b.Property<string>("OpcijaB")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OpcijaB");

                    b.Property<string>("OpcijaC")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OpcijaC");

                    b.Property<string>("ProgramskiJezik")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Jezik");

                    b.Property<string>("TacanOdgovor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TacanOdgovor");

                    b.Property<string>("TekstZadatka")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TekstZadatka");

                    b.Property<int?>("TrenutniKorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("ZadatakJeOk")
                        .HasColumnType("int")
                        .HasColumnName("ZadatakJeOk");

                    b.Property<int>("ZadatakPrelak")
                        .HasColumnType("int")
                        .HasColumnName("ZadatakPrelak");

                    b.Property<int>("ZadatakPretezak")
                        .HasColumnType("int")
                        .HasColumnName("ZadatakPretezak");

                    b.HasKey("ID");

                    b.HasIndex("TrenutniKorisnikID");

                    b.ToTable("ZadatakOdobren");
                });

            modelBuilder.Entity("server.Models.ZadatakNaCekanju", b =>
                {
                    b.HasOne("server.Models.Korisnik", "TrenutniKorisnik")
                        .WithMany()
                        .HasForeignKey("TrenutniKorisnikID");

                    b.Navigation("TrenutniKorisnik");
                });

            modelBuilder.Entity("server.Models.ZadatakOdobren", b =>
                {
                    b.HasOne("server.Models.Korisnik", "TrenutniKorisnik")
                        .WithMany()
                        .HasForeignKey("TrenutniKorisnikID");

                    b.Navigation("TrenutniKorisnik");
                });
#pragma warning restore 612, 618
        }
    }
}
